{"version":3,"sources":["components/Row.js","components/Button.js","utils/calculator.js","App.js"],"names":["children","View","style","flexDirection","screen","Dimensions","get","buttonWidth","width","styles","StyleSheet","create","text","color","fontSize","button","backgroundColor","flex","height","Math","floor","alignItems","justifyContent","borderRadius","margin","buttonDouble","paddingLeft","buttonSecondary","buttonAccent","onPress","size","theme","buttonStyles","textStyles","push","textSecondary","TouchableOpacity","Text","initialState","currentValue","operator","previousValue","list","calculator","type","value","state","handleNumber","current","parseFloat","previous","resetState","handleEqual","App","handleTap","setState","container","StatusBar","SafeAreaView","this","map","x","toLocaleString","Row","Button","React","Component","textAlign","marginRight","marginBottom"],"mappings":"yRAGe,kBAAEA,EAAQ,EAARA,SAAQ,OACrB,cAACC,EAAA,QAAI,CAACC,MAAO,CAACC,cAAe,OAAO,SAAEH,K,QCDpCI,E,MAASC,QAAWC,IAAI,UACxBC,EAAcH,EAAOI,MAAQ,EAE7BC,EAASC,UAAWC,OAAO,CAChCC,KAAM,CACLC,MAAO,OACPC,SAAU,IAEXC,OAAQ,CACPC,gBAAiB,UACjBC,KAAM,EACNC,OAAQC,KAAKC,MAAMb,EAAc,IACjCc,WAAY,SACZC,eAAgB,SAChBC,aAAcJ,KAAKC,MAAMb,GACzBiB,OAAQ,GAETC,aAAc,CACbjB,MAAOJ,EAAOI,MAAQ,EAAI,GAC1BS,KAAM,EACNI,WAAY,aACZK,YAAa,IAEdC,gBAAiB,CAChBX,gBAAiB,WAElBY,aAAc,CACbZ,gBAAiB,aAGJ,cAAqC,IAAlCa,EAAO,EAAPA,QAASjB,EAAI,EAAJA,KAAMkB,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAChCC,EAAe,CAACvB,EAAOM,QACvBkB,EAAa,CAACxB,EAAOG,MAY3B,MAVa,WAATkB,GACHE,EAAaE,KAAKzB,EAAOgB,cAEZ,cAAVM,GACHC,EAAaE,KAAKzB,EAAOkB,iBACzBM,EAAWC,KAAKzB,EAAO0B,gBACH,WAAVJ,GACVC,EAAaE,KAAKzB,EAAOmB,cAIzB,cAACQ,EAAA,QAAgB,CAACP,QAASA,EAAS3B,MAAO8B,EAAa,SACvD,cAACK,EAAA,QAAI,CAACnC,MAAO+B,EAAW,SAAErB,O,ilBCjDtB,IAAM0B,EAAe,CAC3BC,aAAc,IACdC,SAAU,KACVC,cAAe,KACfC,KAAM,IAiFQC,EA3BI,SAACC,EAAMC,EAAOC,GAChC,OAAQF,GACP,IAAK,SACJ,OAtDyB,SAACC,EAAOC,GACnC,MAA2B,MAAvBA,EAAMP,aACF,CAAEA,aAAa,GAAIM,GAGpB,CACNN,aAAa,GAAIO,EAAMP,aAAeM,GAgD9BE,CAAaF,EAAOC,GAC5B,IAAK,WACJ,MAAO,CACNN,SAAUK,EACVJ,cAAeK,EAAMP,aACrBA,aAAc,KAEhB,IAAK,QACJ,OApDwB,SAACO,GAC3B,IAAQP,EAA0CO,EAA1CP,aAAcE,EAA4BK,EAA5BL,cAAeD,EAAaM,EAAbN,SAE/BQ,EAAUC,WAAWV,GACrBW,EAAWD,WAAWR,GACtBU,EAAa,CAClBX,SAAU,KACVC,cAAe,MAGhB,MAAiB,MAAbD,EACI,EAAP,CACCD,aAAcW,EAAWF,GACtBG,GAIY,MAAbX,EACI,EAAP,CACCD,aAAcW,EAAWF,GACtBG,GAIY,MAAbX,EACI,EAAP,CACCD,aAAcW,EAAWF,GACtBG,GAIY,MAAbX,EACI,EAAP,CACCD,aAAcW,EAAWF,GACtBG,GAIEL,EAcEM,CAAYN,GACpB,IAAK,QACJ,OAAOR,EACR,IAAK,SACJ,MAAO,CACNC,aAAa,IAAsC,EAAlCU,WAAWH,EAAMP,eAEpC,IAAK,aACJ,MAAO,CACNA,aAAa,GAAqC,IAAjCU,WAAWH,EAAMP,eAEpC,QACC,OAAOO,I,+aC5EoD,IACzCO,EAAG,uIAKrB,OALqB,oCACvBP,MAAQR,EAAa,EAErBgB,UAAY,SAACV,EAAMC,GAClB,EAAKU,UAAS,SAACT,GAAK,OAAKH,EAAWC,EAAMC,EAAOC,OACjD,EA8CA,OA9CA,2BACD,WAAU,IAAD,OACR,OACC,eAAC7C,EAAA,QAAI,CAACC,MAAOO,EAAO+C,UAAU,UAC7B,cAACC,EAAA,UAAS,CAACvD,MAAM,SACjB,eAACwD,EAAA,QAAY,WACXC,KAAKb,MAAMJ,KAAKkB,KAAI,SAACC,GACrB,OACC,cAACxB,EAAA,QAAI,CAASnC,MAAOO,EAAOoC,MAAM,SAChCI,WAAWY,GAAGC,kBADLD,MAKb,cAACxB,EAAA,QAAI,CAACnC,MAAOO,EAAOoC,MAAM,SAAEI,WAAWU,KAAKb,MAAMP,cAAcuB,mBAChE,eAACC,EAAG,WACH,cAACC,EAAM,CAACpD,KAAK,IAAImB,MAAM,YAAYF,QAAS,kBAAM,EAAKyB,UAAU,YACjE,cAACU,EAAM,CAACpD,KAAK,MAAMmB,MAAM,YAAYF,QAAS,kBAAM,EAAKyB,UAAU,aACnE,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,YAAYF,QAAS,kBAAM,EAAKyB,UAAU,iBACjE,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,SAASF,QAAS,kBAAM,EAAKyB,UAAU,WAAY,WAE3E,eAACS,EAAG,WACH,cAACC,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,SAASF,QAAS,kBAAM,EAAKyB,UAAU,WAAY,WAE3E,eAACS,EAAG,WACH,cAACC,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,SAASF,QAAS,kBAAM,EAAKyB,UAAU,WAAY,WAE3E,eAACS,EAAG,WACH,cAACC,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACzD,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,SAASF,QAAS,kBAAM,EAAKyB,UAAU,WAAY,WAE3E,eAACS,EAAG,WACH,cAACC,EAAM,CAACpD,KAAK,IAAIkB,KAAK,SAASD,QAAS,kBAAM,EAAKyB,UAAU,SAAU,MACvE,cAACU,EAAM,CAACpD,KAAK,IAAIiB,QAAS,kBAAM,EAAKyB,UAAU,SAAU,QACzD,cAACU,EAAM,CAACpD,KAAK,IAAImB,MAAM,SAASF,QAAS,kBAAM,EAAKyB,UAAU,yBAKlE,EAnDsB,CAASW,IAAMC,WAsDjCzD,EAASC,UAAWC,OAAO,CAChC6C,UAAW,CACVvC,KAAM,EACND,gBAAiB,UACjBM,eAAgB,YAEjBuB,MAAO,CACNhC,MAAO,OACPC,SAAU,GACVqD,UAAW,QACXC,YAAa,GACbC,aAAc,O","file":"static/js/app.3bc46312.chunk.js","sourcesContent":["import React from 'react'\nimport { View } from 'react-native'\n\nexport default ({children}) => (\n    <View style={{flexDirection: 'row'}}>{children}</View>\n)","import React from 'react';\nimport { TouchableOpacity, StyleSheet, Text, Dimensions } from 'react-native';\n\nconst screen = Dimensions.get('window');\nconst buttonWidth = screen.width / 4;\n\nconst styles = StyleSheet.create({\n\ttext: {\n\t\tcolor: '#fff',\n\t\tfontSize: 25,\n\t},\n\tbutton: {\n\t\tbackgroundColor: '#333333',\n\t\tflex: 1,\n\t\theight: Math.floor(buttonWidth - 10),\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: Math.floor(buttonWidth),\n\t\tmargin: 5,\n\t},\n\tbuttonDouble: {\n\t\twidth: screen.width / 2 - 10,\n\t\tflex: 0,\n\t\talignItems: 'flex-start',\n\t\tpaddingLeft: 40,\n\t},\n\tbuttonSecondary: {\n\t\tbackgroundColor: '#a6a6a6',\n\t},\n\tbuttonAccent: {\n\t\tbackgroundColor: '#f09a36',\n\t},\n});\nexport default ({ onPress, text, size, theme }) => {\n\tconst buttonStyles = [styles.button];\n\tconst textStyles = [styles.text];\n\n\tif (size === 'double') {\n\t\tbuttonStyles.push(styles.buttonDouble);\n\t}\n\tif (theme === 'secondary') {\n\t\tbuttonStyles.push(styles.buttonSecondary);\n\t\ttextStyles.push(styles.textSecondary);\n\t} else if (theme === 'accent') {\n\t\tbuttonStyles.push(styles.buttonAccent);\n\t}\n\n\treturn (\n\t\t<TouchableOpacity onPress={onPress} style={buttonStyles}>\n\t\t\t<Text style={textStyles}>{text}</Text>\n\t\t</TouchableOpacity>\n\t);\n};\n","export const initialState = {\n\tcurrentValue: '0',\n\toperator: null,\n\tpreviousValue: null,\n\tlist: [],\n};\n\nexport const handleNumber = (value, state) => {\n\tif (state.currentValue === '0') {\n\t\treturn { currentValue: `${value}` };\n\t}\n\n\treturn {\n\t\tcurrentValue: `${state.currentValue}${value}`,\n\t};\n};\n\nexport const handleEqual = (state) => {\n\tconst { currentValue, previousValue, operator } = state;\n\n\tconst current = parseFloat(currentValue);\n\tconst previous = parseFloat(previousValue);\n\tconst resetState = {\n\t\toperator: null,\n\t\tpreviousValue: null,\n\t};\n\n\tif (operator === '/') {\n\t\treturn {\n\t\t\tcurrentValue: previous / current,\n\t\t\t...resetState,\n\t\t};\n\t}\n\n\tif (operator === '*') {\n\t\treturn {\n\t\t\tcurrentValue: previous * current,\n\t\t\t...resetState,\n\t\t};\n\t}\n\n\tif (operator === '+') {\n\t\treturn {\n\t\t\tcurrentValue: previous + current,\n\t\t\t...resetState,\n\t\t};\n\t}\n\n\tif (operator === '-') {\n\t\treturn {\n\t\t\tcurrentValue: previous - current,\n\t\t\t...resetState,\n\t\t};\n\t}\n\n\treturn state;\n};\n\nconst calculator = (type, value, state) => {\n\tswitch (type) {\n\t\tcase 'number':\n\t\t\treturn handleNumber(value, state);\n\t\tcase 'operator':\n\t\t\treturn {\n\t\t\t\toperator: value,\n\t\t\t\tpreviousValue: state.currentValue,\n\t\t\t\tcurrentValue: '0',\n\t\t\t};\n\t\tcase 'equal':\n\t\t\treturn handleEqual(state);\n\t\tcase 'clear':\n\t\t\treturn initialState;\n\t\tcase 'posneg':\n\t\t\treturn {\n\t\t\t\tcurrentValue: `${parseFloat(state.currentValue) * -1}`,\n\t\t\t};\n\t\tcase 'percentage':\n\t\t\treturn {\n\t\t\t\tcurrentValue: `${parseFloat(state.currentValue) * 0.01}`,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default calculator;\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\nimport Row from './components/Row';\nimport Button from './components/Button';\nimport calculator, { initialState } from './utils/calculator';\nexport default class App extends React.Component {\n\tstate = initialState;\n\n\thandleTap = (type, value) => {\n\t\tthis.setState((state) => calculator(type, value, state));\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<StatusBar style=\"auto\" />\n\t\t\t\t<SafeAreaView>\n\t\t\t\t\t{this.state.list.map((x) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Text key={x} style={styles.value}>\n\t\t\t\t\t\t\t\t{parseFloat(x).toLocaleString()}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<Text style={styles.value}>{parseFloat(this.state.currentValue).toLocaleString()}</Text>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Button text=\"C\" theme=\"secondary\" onPress={() => this.handleTap('clear')} />\n\t\t\t\t\t\t<Button text=\"+/-\" theme=\"secondary\" onPress={() => this.handleTap('posneg')} />\n\t\t\t\t\t\t<Button text=\"%\" theme=\"secondary\" onPress={() => this.handleTap('percentage')} />\n\t\t\t\t\t\t<Button text=\"/\" theme=\"accent\" onPress={() => this.handleTap('operator', '/')} />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Button text=\"7\" onPress={() => this.handleTap('number', 7)} />\n\t\t\t\t\t\t<Button text=\"8\" onPress={() => this.handleTap('number', 8)} />\n\t\t\t\t\t\t<Button text=\"9\" onPress={() => this.handleTap('number', 9)} />\n\t\t\t\t\t\t<Button text=\"x\" theme=\"accent\" onPress={() => this.handleTap('operator', '*')} />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Button text=\"4\" onPress={() => this.handleTap('number', 4)} />\n\t\t\t\t\t\t<Button text=\"5\" onPress={() => this.handleTap('number', 5)} />\n\t\t\t\t\t\t<Button text=\"6\" onPress={() => this.handleTap('number', 6)} />\n\t\t\t\t\t\t<Button text=\"-\" theme=\"accent\" onPress={() => this.handleTap('operator', '-')} />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Button text=\"1\" onPress={() => this.handleTap('number', 1)} />\n\t\t\t\t\t\t<Button text=\"2\" onPress={() => this.handleTap('number', 2)} />\n\t\t\t\t\t\t<Button text=\"3\" onPress={() => this.handleTap('number', 3)} />\n\t\t\t\t\t\t<Button text=\"+\" theme=\"accent\" onPress={() => this.handleTap('operator', '+')} />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Button text=\"0\" size=\"double\" onPress={() => this.handleTap('number', 0)} />\n\t\t\t\t\t\t<Button text=\".\" onPress={() => this.handleTap('number', '.')} />\n\t\t\t\t\t\t<Button text=\"=\" theme=\"accent\" onPress={() => this.handleTap('equal')} />\n\t\t\t\t\t</Row>\n\t\t\t\t</SafeAreaView>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#202020',\n\t\tjustifyContent: 'flex-end',\n\t},\n\tvalue: {\n\t\tcolor: '#fff',\n\t\tfontSize: 40,\n\t\ttextAlign: 'right',\n\t\tmarginRight: 20,\n\t\tmarginBottom: 10,\n\t},\n});\n"],"sourceRoot":""}